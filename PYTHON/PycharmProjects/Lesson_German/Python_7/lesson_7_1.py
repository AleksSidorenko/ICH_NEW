"""
Aufgabe 1. Schreiben Sie ein Python-Programm, das zufaÃàllige Fakten uÃàber Katzen ausgibt.
Im Internet gibt es viele Dienste, die zufaÃàllige Fakten uÃàber REST-APIs bereitstellen.
In dieser Aufgabe verwenden wir den Dienst CatFact Ninja.
Dieser Dienst ist kostenlos und erfordert keine Registrierung.
1. Bevor Sie das Programm schreiben, gehen Sie auf die Website von CatFact Ninja API.
   Diese Website bietet die MoÃàglichkeit, Anfragen zu senden,
   um zufaÃàllige Katzenfakten zu erhalten
   (Wenn Sie auf der Website ein Formular zu Ihrer Person und der Bewerbung ausfuÃàllen muÃàssen,
   koÃànnen Sie dort alles schreiben.).
2. Suchen Sie in der Dokumentation nach einer Anfrage fuÃàr einen zufaÃàlligen Fakt.
   Ein Beispiel einer Anfrage:
   https://catfact.ninja/fact
3. Geben Sie diese URL in Ihren Browser ein und uÃàberpruÃàfen Sie das Ergebnis.
   Beispiel fuÃàr eine Antwort:
   {
     "fact": "Katzen benutzen ihre Schnurrhaare, um zu erkennen, ob sie durch
   einen engen Raum passen.",
     "length": 63
}
4. Untersuchen Sie die erhaltene JSONÓÇàAntwort und finden Sie den Parameter fact,
   der den Katzenfakt enthaÃàlt.
5. Nun gehen wir zur Praxis uÃàber. Verwenden Sie die Bibliothek requests
   und schreiben Sie ein Programm, das eine Anfrage an die API sendet,
   einen zufaÃàlligen Katzenfakt erhaÃàlt und diesen an den Benutzer ausgibt.

 Hinweis: Verwenden Sie die folgende URL:
   https://catfact.ninja/fact
Beispiel eines Python-Programms:
   import requests
   def get_cat_fact():
       url = 'https://catfact.ninja/fact'
       response = requests.get(url)
       if response.status_code == 200:
           data = response.json()
           print(f"ZufaÃàlliger Fakt uÃàber Katzen: {data['fact']}")
       else:
           print("Daten konnten nicht vom Server abgerufen werden.")
   get_cat_fact()
"""
# Importiere die Bibliothek 'requests', um HTTP-Anfragen zu senden.
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É 'requests', —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å HTTP-–∑–∞–ø—Ä–æ—Å—ã.
import requests

# Definiere eine Funktion namens 'get_cat_fact', die einen Katzenfakt abruft.
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –∏–º–µ–Ω–µ–º 'get_cat_fact', –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö.
def get_cat_fact():
    # Speichere die API-URL in einer Variablen.
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL API –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
    url = 'https://catfact.ninja/fact'

    # Sende eine GET-Anfrage an die angegebene URL.
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL.
    response = requests.get(url)

    # √úberpr√ºfe, ob die Antwort erfolgreich war (Statuscode 200).
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω—ã–º (–∫–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è 200).
    if response.status_code == 200:
        # Wandle die Antwort in ein JSON-Format um.
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç JSON.
        data = response.json()

        # Gib den Katzenfakt aus dem 'fact'-Feld aus.
        # –í—ã–≤–æ–¥–∏–º —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–µ –∏–∑ –ø–æ–ª—è 'fact'.
        print(f"Zuf√§lliger Fakt √ºber Katzen: {data['fact']}")
    else:
        # Wenn der Statuscode nicht 200 ist, gib eine Fehlermeldung aus.
        # –ï—Å–ª–∏ –∫–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ 200, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        print("Daten konnten nicht vom Server abgerufen werden.")
        # –î–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞.

# Rufe die Funktion auf, um den Katzenfakt anzuzeigen.
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–µ.
get_cat_fact()


"""
### **–ó–∞–¥–∞—á–∞ 1. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ Python, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—à–∫–∞—Ö.**

–í –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã —á–µ—Ä–µ–∑ REST API.  
–í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å **CatFact Ninja**.

–≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

1. –ü—Ä–µ–∂–¥–µ —á–µ–º –ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∑–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç **CatFact Ninja API**.  
   –≠—Ç–æ—Ç —Å–∞–π—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—à–∫–∞—Ö.  
   (–ï—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –æ —Å–µ–±–µ –∏ –≤–∞—à–µ–π —Ü–µ–ª–∏, –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ.)

2. –ù–∞–π–¥–∏—Ç–µ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞.  
   –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:  
   `https://catfact.ninja/fact`

3. –í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ.  
   –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:  
   ```json
   {
     "fact": "–ö–æ—à–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–≤–æ–∏ —É—Å—ã, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —Å–º–æ–≥—É—Ç –ª–∏ –æ–Ω–∏ –ø—Ä–æ–ª–µ–∑—Ç—å –≤ —É–∑–∫–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.",
     "length": 63
   }
   ```

4. –ò–∑—É—á–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –Ω–∞–π–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä `fact`, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∞–º —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö.

5. –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É `requests` –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API, –ø–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

üìå **–ü–æ–¥—Å–∫–∞–∑–∫–∞:** –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π URL:  
`https://catfact.ninja/fact`

---

**–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ Python:**
```python
import requests

def get_cat_fact():
    url = 'https://catfact.ninja/fact'
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        print(f"–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö: {data['fact']}")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞.")

get_cat_fact()
"""


"""
–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è, —á—Ç–æ —Ç–∞–∫–æ–µ REST API –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–º–µ—Ä —Å CatFact Ninja.

---

## üìò –ß—Ç–æ —Ç–∞–∫–æ–µ REST API?

**REST API (Representational State Transfer Application Programming Interface)** ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–æ–≥—É—Ç "–æ–±—â–∞—Ç—å—Å—è" –º–µ–∂–¥—É —Å–æ–±–æ–π —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.

–ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è:  
üëâ REST API –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–≤–æ–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ **–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å** (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¥–∞–π –º–Ω–µ —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö") –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä,  
–∞ —Å–µ—Ä–≤–µ—Ä **–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ –æ—Ç–≤–µ—Ç –¥–∞–Ω–Ω—ã–µ** (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–æ—à–∫–∏ —Å–ø—è—Ç 70% —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏").

---

## üì© –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ?

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–æ—à–∞–≥–æ–≤–æ –ø—Ä–∏–º–µ—Ä —Å CatFact Ninja:

### 1. URL (–∞–¥—Ä–µ—Å –∑–∞–ø—Ä–æ—Å–∞):
```
https://catfact.ninja/fact
```

–≠—Ç–æ—Ç –∞–¥—Ä–µ—Å ‚Äî –∫–∞–∫ –¥–≤–µ—Ä—å –≤ –æ—Ñ–∏—Å, –≥–¥–µ —Å–∏–¥—è—Ç ¬´–∫–æ—à–∞—á—å–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã¬ª. –¢—ã —Å—Ç—É—á–∏—à—å –≤ –Ω–µ—ë —Å –ø—Ä–æ—Å—å–±–æ–π:  
*"–≠–π, —Å–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—à–∫–∞—Ö!"*

---

### 2. HTTP-–∑–∞–ø—Ä–æ—Å:
–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –º–µ—Ç–æ–¥ `GET`, —Ç–æ –µ—Å—Ç—å –≥–æ–≤–æ—Ä–∏—à—å:  
*"–î–∞–π –º–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."*

–ó–∞–ø—Ä–æ—Å –¥–µ–ª–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `requests` –≤ Python:
```python
response = requests.get('https://catfact.ninja/fact')
```

---

### 3. –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON):
–°–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–±–µ —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ:
```json
{
  "fact": "–ö–æ—à–∫–∏ –º–æ–≥—É—Ç –≤—Ä–∞—â–∞—Ç—å —É—à–∏ –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤.",
  "length": 47
}
```

–≠—Ç–æ –æ–±—ã—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å (dictionary) —Å –¥–≤—É–º—è –ø–æ–ª—è–º–∏:
- `"fact"` ‚Äî —Å–∞–º —Ñ–∞–∫—Ç (—Ç–µ–±–µ –æ–Ω –∏ –Ω—É–∂–µ–Ω!)
- `"length"` ‚Äî –¥–ª–∏–Ω–∞ —ç—Ç–æ–≥–æ —Ñ–∞–∫—Ç–∞ (–≤ —Å–∏–º–≤–æ–ª–∞—Ö)

---

### 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞:
–¢—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å JSON-–æ—Ç–≤–µ—Ç –≤ –æ–±—ä–µ–∫—Ç Python:
```python
data = response.json()
```

–¢–µ–ø–µ—Ä—å `data['fact']` ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º —Ñ–∞–∫—Ç–æ–º.

---

## üõ† –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞?

1. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ `https://catfact.ninja/fact`
2. –ü–æ–ª—É—á–∞–µ—Ç JSON-–æ—Ç–≤–µ—Ç —Å —Ñ–∞–∫—Ç–æ–º
3. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–ª–µ `"fact"` –∏–∑ –æ—Ç–≤–µ—Ç–∞
4. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

---

## üîÅ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ

–¢—ã –º–æ–∂–µ—à—å:
- –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã;
- —Å–¥–µ–ª–∞—Ç—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å;
- —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–∫—Ç—ã –≤ —Ñ–∞–π–ª;
- –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–ª–∏–Ω—É —Ñ–∞–∫—Ç–∞ (`length`) –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–∞.

---

–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –¥–æ–±–∞–≤–∏–ª –∫–∞–∫–∏–µ-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π –≤ –∫–æ–¥?
"""
