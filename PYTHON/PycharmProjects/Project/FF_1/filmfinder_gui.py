
# filmfinder_gui.py

import tkinter as tk
from tkinter import ttk, messagebox
from search_engine import FilmSearcher
from logger import QueryLogger


class FilmFinderApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("üé¨ FilmFinder - –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤")
        self.geometry("800x600")
        self.searcher = FilmSearcher()
        self.logger = QueryLogger()
        self.create_widgets()
        self.style_ui()

    def create_widgets(self):
        notebook = ttk.Notebook(self)
        notebook.pack(expand=True, fill="both")

        # –í–∫–ª–∞–¥–∫–∞ 1: –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
        self.keyword_frame = ttk.Frame(notebook)
        notebook.add(self.keyword_frame, text="üîç –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")

        self.keyword_entry = ttk.Entry(self.keyword_frame, width=50)
        self.keyword_entry.pack(pady=10)

        ttk.Button(self.keyword_frame, text="–ù–∞–π—Ç–∏", command=self.search_by_keyword).pack()
        self.keyword_results = tk.Text(self.keyword_frame, height=20)
        self.keyword_results.pack(expand=True, fill="both", padx=10, pady=10)

        # –í–∫–ª–∞–¥–∫–∞ 2: –ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É
        self.genre_year_frame = ttk.Frame(notebook)
        notebook.add(self.genre_year_frame, text="üéû –ü–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É")

        self.genre_combo = ttk.Combobox(self.genre_year_frame, state="readonly", values=self.searcher.get_all_genres())
        self.genre_combo.set("–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä")
        self.genre_combo.pack(pady=10)

        self.year_entry = ttk.Entry(self.genre_year_frame)
        self.year_entry.pack(pady=5)
        self.year_entry.insert(0, "–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥")

        ttk.Button(self.genre_year_frame, text="–ù–∞–π—Ç–∏", command=self.search_by_genre_year).pack()
        self.genre_results = tk.Text(self.genre_year_frame, height=20)
        self.genre_results.pack(expand=True, fill="both", padx=10, pady=10)

        # –í–∫–ª–∞–¥–∫–∞ 3: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        self.popular_frame = ttk.Frame(notebook)
        notebook.add(self.popular_frame, text="üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã")

        ttk.Button(self.popular_frame, text="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ", command=self.show_popular_queries).pack(pady=10)
        self.popular_results = tk.Text(self.popular_frame, height=20)
        self.popular_results.pack(expand=True, fill="both", padx=10, pady=10)

    def search_by_keyword(self):
        keyword = self.keyword_entry.get()
        if not keyword.strip():
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ.")
            return
        results = self.searcher.search_by_keyword(keyword)
        self.logger.log_query(keyword, "keyword")
        self.display_results(self.keyword_results, results)

    def search_by_genre_year(self):
        genre = self.genre_combo.get()
        year = self.year_entry.get()
        if genre == "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä" or not year.isdigit():
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥.")
            return
        results = self.searcher.search_by_genre_year(genre, int(year))
        self.logger.log_query(f"{genre}, {year}", "genre_year")
        self.display_results(self.genre_results, results)

    def show_popular_queries(self):
        queries = self.logger.get_popular_queries()
        formatted = "\n".join([f"{i+1}. {q['query_text']} ({q['count']})" for i, q in enumerate(queries)])
        self.popular_results.delete("1.0", tk.END)
        self.popular_results.insert(tk.END, formatted)

    def display_results(self, text_widget, results):
        text_widget.delete("1.0", tk.END)
        if results:
            for film in results:
                text_widget.insert(tk.END, f"{film['title']} ({film['release_year']})\n–û–ø–∏—Å–∞–Ω–∏–µ: {film['description']}\n\n")
        else:
            text_widget.insert(tk.END, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    def style_ui(self):
        style = ttk.Style()
        style.theme_use("clam")
        style.configure("TButton", padding=6, font=("Arial", 10))
        style.configure("TNotebook.Tab", font=("Arial", 11, "bold"))
        style.configure("TEntry", padding=4)
        style.configure("TCombobox", padding=4)


if __name__ == "__main__":
    app = FilmFinderApp()
    app.mainloop()
