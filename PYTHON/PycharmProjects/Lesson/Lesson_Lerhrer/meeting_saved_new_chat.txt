08:59:53 –û—Ç Ayjemal Berdiyeva –¥–æ –í—Å–µ:
	–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!
	Alexander Golubenko:üëã
	
09:00:09 –û—Ç Vadym Prudnikov –¥–æ –í—Å–µ:
	–¥–æ–±—Ä–æ–µ)
	
09:34:37 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	nums = [1, 2, 3, 4, 5]
	# nums.__next__()
	it = nums.__iter__()
	print(it)
	print(type(it))
	print(it.__next__())
	print(it.__next__())
	print("-----------")
	print(it.__next__())
	nums[3] = 0
	print(nums)
	# print(list(it))
	new = []
	for i in it:
	    new.append(i)
	print(new)
	
09:52:01 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	import sys
	
	numbers = iter(range(1, 1000001))
	print(sys.getsizeof(numbers))
	numbers = range(1, 1000001)
	print(sys.getsizeof(numbers))
	numbers = list(range(1, 1000001))
	print(sys.getsizeof(numbers))
	
	
09:52:13 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	# file = open("numbers.txt")
	# print(file.__next__())
	# print(file.__next__())
	# print(file)
	# print(type(file))
	
10:05:39 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	def my_generator():
	yield 1
	yield 2
	yield 3
	gen = my_generator()
	print(next(gen))
	print(next(gen)) 
	print(next(gen))
	
10:10:53 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	def my_generator():
	    yield 1
	    yield 2
	    yield 3
	gen = my_generator()
	gen1 = my_generator()
	print(gen)
	print(type(gen))
	
	print(next(gen))
	print(next(gen1))
	print(next(gen))
	print(next(gen))
	
10:13:03 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	# return –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ
	def my_generator():
	    yield 1
	    yield 2
	    return "End"
	
	gen = my_generator()
	print(next(gen))  # 1
	print(next(gen))  # 2
	try:
	    print(next(gen))  # StopIteration: End
	except StopIteration as e:
	    print(e.value)  # End
	
10:16:36 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	# return –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ
	def process_data(data):
	    for i in data:
	        if i == "STOP":
	            return "Processing stopped"  # –ó–∞–≤–µ—Ä—à–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
	        yield i
	
	gen = process_data(["a", "b", "c", "STOP", "d"])
	for item in gen:
	    print(item)
	
10:30:10 –û—Ç Stanislav M. –¥–æ –í—Å–µ:
	–≤—Ä–æ–¥–µ –µ—Å–ª–∏ –≤—ã–Ω—É—Ç—å —Ç–æ —á—Ç–æ –≤ [] –∏ –∑–∞—Å—É–Ω—É—Ç—å –≤ (yield letter...) —Ç–æ –±—É–¥–µ—Ç –∏ –±–µ–∑ —Ñ–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
	
10:35:33 –û—Ç Teacher 23 Teacher 23 –¥–æ –í—Å–µ:
	# def show_letters(some_str):
	#     for symbol in some_str:
	#         if symbol.isalpha():
	#             yield symbol
	
	def show_letters(some_str):
	    # yield from (letter for letter in some_str if letter.isalpha())
	     yield (letter for letter in some_str if letter.isalpha())
	
	for i in show_letters("kf23r89h2i"):
	    print(i)
	
